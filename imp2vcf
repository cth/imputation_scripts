#!/usr/bin/ruby 
require 'optparse'

options = {
	:samplefile => nil,
	:dosage => false
}

OptionParser.new do |opts|
	opts.on( '-h', '--help', 'Display this screen' ) do
		puts opts
		exit
	end

	opts.on("-c", "--chr chrom", "chromosome") do |chrom|
		options[:chr] = chrom
	end 

	opts.on("-s", "--sample-file file","Sample file") do |file|
		options[:samplefile] = file
	end

	opts.on("-g", "--gen-file file", ".gen file") do |file|
		options[:genfile] = file
	end

	opts.on("-v", "--vcf-file file", ".vcf output file") do |file|
		options[:vcf_file] = file	
	end

	opts.on("-d", "--dosage", "Use dosage genotypes rather than genotype likelihoods as provided by IMPUTE2") do 
		options[:dosage] = true
	end
end.parse!

puts options 

# Read sample file:
samples = [] 
File.open(options[:samplefile]) do |file|
	lineno=0
	file.each do |line|
		lineno = lineno + 1
		next if lineno == 1
		samples << line.chomp.split(" ").first
	end
end

header = [ 
'##fileformat=VCFv4.1',
'##INFO=<ID=PSEUDO,Number=0,Type=Flag,Description="A dummy flag">',
'##FORMAT=<ID=GL,Number=.,Type=Float,Description="Genotype Likelihoods">'
].join("\n")

out = File.open(options[:vcf_file], "w")

out.puts(header)

fields = [
"#CHROM",
"POS",
"ID",
"REF",
"ALT",
"QUAL",
"FILTER",
"INFO",
"FORMAT",
] + samples 


# The Dosage represents the predicted dosage of the non reference allele given the data available, 
# it will always have a value between 0 and 2.
# The formula is Dosage = Pr(Het|Data) + 2*Pr(Alt|Data)
# See, http://www.1000genomes.org/faq/what-does-genotype-dosage-mean-phase1-integrated-call-set
def genotype_likelihoods_to_dosage(p_aa, p_ab, p_bb)
	p_bb * 2 + p_ab
end

out.puts(fields.join("\t"))

File.open(options[:genfile]) do |file|
	file.each do |line|
		vcfline = []
		fields = line.chomp.split(" ")
		vcfline << options[:chr] || fields[0]	# CHR
		vcfline << fields[2] 		# POS 
		vcfline << fields[1]		# ID
		vcfline << fields[3]		# REF allele 
		vcfline << fields[4]		# ALT allele 
		vcfline << 100			# QUAL (pseudo)
		vcfline << "PASS"		# FILTER (pseudo)
		vcfline << "PSEUDO=1"		# INFO (we do not use for anything)
		if options[:dosage] then
			vcfline << "DS"
		else
			vcfline << "GL"			# FORMAT 
		end
		likelihoods = []
		5.upto(fields.size-1) do |i|
			checkpoint = 7 % 3
			# Genotype likelihoods are required to be log10 scaled in VCF 
			if options[:dosage] then
				likelihoods << fields[i].to_f
			else 
				if fields[i].to_f == 0 then
					likelihoods << -100.0 # Suffiently small, but not -infinity
				else
					likelihoods << Math.log10(fields[i].to_f) 
				end
			end

			if i % 3 == checkpoint then
				if options[:dosage] then
					dosage = genotype_likelihoods_to_dosage(*likelihoods)
					#puts likelihoods.inspect + " => " +  dosage.to_s
					genotype_likelihoods_to_dosage(*likelihoods)
					vcfline << dosage 
				else
					vcfline << likelihoods.join(",")		
				end
				likelihoods = []
			end
		end
		out.puts(vcfline.join("\t"))
	end
end

out.close
